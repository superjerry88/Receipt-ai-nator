@inherits LayoutComponentBase
@inject CurrentSession CurrentSession
@inject NavigationManager NavigationManager

@if (IsLoaded)
{
    <div class="dark bg-gray-900 min-h-screen flex flex-col  text-gray-200 body-font">
        <header class="bg-gray-800 p-2 ps-4 flex justify-between items-center sticky top-0 z-50 border-stone-500 border-b-2">
           
            <a href="/" class="font-bold text-white">
                <img src="REZEIPT.png" class="max-h-6" />
            </a>

            <!-- Icons for desktop view -->
            <nav class="hidden md:flex space-x-12 ml-4">
                <!-- Use your actual icons here -->
                <TabMenu></TabMenu>
            </nav>


            <a href="/info"
               class="flex flex-col items-center justify-center p-2 text-white rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-300">
                <Icon Name="IconName.Info" IconSize="IconSize.Large"></Icon>
            </a>
        </header>

        <!-- Main content area where @Body will be rendered -->
        <main class="size-full lg:w-3/5 max-w-5xl lg:w-full  flex-grow p-4 mx-auto flex flex-col items-center">
            <div class="size-full">
                @Body
            </div>
        </main>

        <!-- Quick and dirty shortcut to prevent footer from clipping -->
        <div class="md:hidden z-10" style="height: 85px;">
            ⠀
        </div>

        <!-- Icons for mobile view -->
        <nav class="bg-gray-800 text-gray-400 border-t-2 border-stone-500 p-2 flex justify-around md:hidden fixed inset-x-0 bottom-0 z-10">
            <!-- Use your actual icons here -->

            <TabMenu></TabMenu>
        </nav>
    </div>

    <div id="blazor-error-ui">
        An unhandled error has occurred.
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
}

@code
{
    private bool IsLoaded { get; set; }= false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!IsLoaded)
        {
            var currentUser = await CurrentSession.GetUser();
            if(currentUser == null)
            {
                NavigationManager.NavigateTo("/login");
                return;
            }
            IsLoaded = true;
            await InvokeAsync(StateHasChanged);
        }
    }
}
