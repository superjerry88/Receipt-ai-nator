@page "/Reports/{TaskId}/{index}"
@inject NavigationManager NavigationManager
@using System.Web


<Breadcrumb>
    <BreadcrumbItem>
        <BreadcrumbLink To="/reports">Reports</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbItem >
        <BreadcrumbLink To="@ReportPage">JobTask</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbItem Active>
        <BreadcrumbLink To="#">Receipt</BreadcrumbLink>
    </BreadcrumbItem>
</Breadcrumb>

@if (IsLoaded && Receipt != null)
{

    <Card Class="p-3">
        @* Receipt Details *@
        <DisplayGroup>
            <DisplayInfo Label="Receipt ID">@Receipt.ReceiptId.FixString()</DisplayInfo>
            <DisplayInfo Label="Date and Time">@Receipt.DateTime.FixString()</DisplayInfo>
            <DisplayInfo Label="!Separator!"></DisplayInfo>
            <DisplayInfo Label="Shop Name">@Receipt.ShopName.FixString()</DisplayInfo>
            <DisplayInfo Label="Total Items">@Receipt.Items.Count</DisplayInfo>
            <DisplayInfo Label="Total Amount">
                <Badge Color="Color.Success">@Receipt.TotalPrice.FixString(true)</Badge>
            </DisplayInfo>
        </DisplayGroup>

        @* Items *@
        <DisplayCollapse Header="Items">
            @foreach (var Item in Receipt?.Items)
            {
                <DisplayGroup>
                    <DisplayInfo Label="Item Name">@Item.Name.FixString()</DisplayInfo>
                    <DisplayInfo Label="Item Description"><FormattedString></FormattedString>
                        @Item.Description.FixString()</DisplayInfo>
                    <DisplayInfo Label="Item Category">@Item.Category.FixString()</DisplayInfo>
                    <DisplayInfo Label="Price per Item">@Item.PricePerItem.FixString(true)</DisplayInfo>
                    <DisplayInfo Label="Quantity">@Item.Quantity.FixString()</DisplayInfo>
                    <DisplayInfo Label="Total Price">
                        <Badge Color="Color.Success">@Item.TotalPrice.FixString(true)</Badge>
                    </DisplayInfo>
                </DisplayGroup>
            }
        </DisplayCollapse>
        
        <DisplayCollapse Header="Shop Details">
            <DisplayGroup>
                <DisplayInfo Label="Shop Name"> @Receipt.ShopName.FixString() </DisplayInfo>
                <DisplayInfo Label="Shop Address"> @Receipt.ShopAddress.FixString() </DisplayInfo>
                @if (!string.IsNullOrWhiteSpace(Receipt.ShopAddress))
                {
                    <iframe
                        width="100%"
                        height="450"
                        style="border:0"
                        loading="lazy"
                        allowfullscreen
                        referrerpolicy="no-referrer-when-downgrade"
                        src="@GetMapSrc()">
                    </iframe>
                }
            </DisplayGroup>
        </DisplayCollapse>

        <DisplayCollapse Header="Totals">
            <DisplayGroup>
                <DisplayInfo Label="Total Price without Tax">@Receipt.TotalPriceWithoutTax.FixString(true)
                </DisplayInfo>
                <DisplayInfo Label="Total Tax">@Receipt.TotalTax.FixString(true)
                </DisplayInfo>
                <DisplayInfo Label="Total Service Charge">@Receipt.TotalServiceCharge.FixString(true)
                </DisplayInfo>
                <DisplayInfo Label="Total Discount">@Receipt.TotalDiscount.FixString(true)
                </DisplayInfo>
                <DisplayInfo Label="Total Price">
                    <Badge Color="Color.Success">@Receipt.TotalPrice.FixString(true)</Badge>
                </DisplayInfo>
            </DisplayGroup>
        </DisplayCollapse>

        <DisplayCollapse Header="Utility">
            <div class="p-3">
                <Button Block Color="Color.Primary" Clicked="SplitBill">Split Bill</Button>
            </div>
        </DisplayCollapse>
        

    </Card>
}
else
{
    <h1>Receipt not found</h1>
    <Button>Go Back</Button>
}

@code {
    [Parameter] 
    public string TaskId { get; set; } = "";

    [Parameter] 
    public string Index { get; set; } = "";

    //For loading 
    private ScanTask? ScanTask { get; set; }
    private Receipt? Receipt { get; set; }
    private bool IsLoaded { get; set; } = false;

    private string ReportPage => "/Reports/" + TaskId;

    protected override void OnInitialized()
    {
        ScanTask = RezApi.Jobs.GetJob(TaskId);
        if (int.TryParse(Index, out var index))
        {
            Receipt = ScanTask?.Result?.Receipts.ElementAtOrDefault(index);
        }
        IsLoaded = true;
    }

    private void SplitBill()
    {
        NavigationManager.NavigateTo($"/Reports/{TaskId}/{Index}/split");
    }

    private string GetMapSrc()
    {
        //retarded google and their restrictive pay to free trial embded API key, this can be seen in network tab so its fine leaving it here
        var apiKey = "AIzaSyDcmtc5KIomjT3V_YCcfWjaw91ljYZ-lU0";
        var address = HttpUtility.UrlEncode(Receipt?.ShopAddress);
        return $"https://www.google.com/maps/embed/v1/place?key={apiKey}&q={address}";
    }
}
